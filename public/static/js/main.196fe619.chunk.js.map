{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/TechInfo.js","components/Launch.js","App.js","serviceWorker.js","index.js","assets/images/spacex-logo-black-and-white.png"],"names":["useStyles","makeStyles","theme","paper","borderBottom","marginBottom","spacing","padding","failed","borderColor","success","CollisionLink","React","forwardRef","props","ref","react_default","a","createElement","react_router_dom","Object","assign","innerRef","to","LaunchItem","classes","_props$launch","launch","flight_number","mission_name","launch_date_local","launch_success","Paper","className","concat","elevation","Grid","container","item","xs","Typography","variant","component","dist_default","format","Button","color","detailInfo","display","verticalAlign","backgroundColor","MissionKey","Fragment","LAUNCHES_QUERY","gql","_templateObject","Launches","components_MissionKey","react_apollo_esm","query","_ref","loading","error","data","console","log","launches","map","components_LaunchItem","key","Component","card","width","bullet","margin","transform","title","fontSize","pos","TechInfo","_props$data","links","Card","CardContent","gutterBottom","CardActions","size","href","article_link","target","rel","LAUNCH_QUERY","Launch_templateObject","Launch","parseInt","match","params","variables","_data$launch","launch_year","components_TechInfo","client","ApolloClient","uri","createMuiTheme","palette","primary","main","deepOrange","type","logo","alignItems","flexDirection","marginLeft","marginRight","marginTop","App","MuiThemeProvider","CssBaseline","Container","src","alt","react_router","exact","path","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"iYASMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,aAAc,wBACdC,aAAcH,EAAMI,QAAQ,GAC5BC,QAASL,EAAMI,QAAQ,IAEzBE,OAAQ,CACNC,YAAa,OAEfC,QAAS,CACPD,YAAa,YAIXE,EAAgBC,IAAMC,WAAW,SAACC,EAAOC,GAAR,OACrCC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAYC,SAAUP,EAAKQ,GAAG,kCAAqCT,MAiCtDU,EA9BI,SAACV,GAClB,IAAMW,EAAUzB,IADY0B,EAE6CZ,EAAMa,OAAxEC,EAFqBF,EAErBE,cAAeC,EAFMH,EAENG,aAAcC,EAFRJ,EAEQI,kBAAmBC,EAF3BL,EAE2BK,eAEvD,OACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,UAAS,GAAAC,OAAKT,EAAQtB,MAAb,KAAA+B,OAAsBH,GAAkBN,EAAQf,QAAhD,KAAAwB,QAA4DH,GAAkBN,EAAQjB,QAAU2B,UAAW,GACzHnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,WAAS,GACbrB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAChCb,GAEHb,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KACpC1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ2B,OAAQ,oBACbd,IAGLd,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,QAAtC,kBACkBd,IAGpBZ,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbvB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAQC,MAAO,UAAWJ,UAAW/B,EAAeY,GAAE,WAAAW,OAAaN,IAAnE,mBC7CJ5B,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC6C,WAAY,CACVC,QAAS,eACTzC,QAAS,WACT0C,cAAe,UAEjBvC,QAAS,CACPwC,gBAAiB,SAEnB1C,OAAQ,CACN0C,gBAAiB,UAkBNC,EAdI,WACjB,IAAM1B,EAAUzB,IAChB,OACEgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACEpC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMe,UAAS,GAAAC,OAAKT,EAAQsB,WAAb,KAAAb,OAA2BT,EAAQf,WADpD,YAGAM,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMe,UAAS,GAAAC,OAAKT,EAAQsB,WAAb,KAAAb,OAA2BT,EAAQjB,UADpD,iQCjBN,IAAM6C,EAAiBC,IAAHC,KAoCLC,mLAxBX,OACExC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,QAAS,KAAMC,UAAW,MAAtC,iBAGA1B,EAAAC,EAAAC,cAACuC,EAAD,MACAzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAOC,MAAON,GAEV,SAAAO,GAA4B,IAA1BC,EAA0BD,EAA1BC,QAASC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,KAChB,OAAIF,EAAgB7C,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,QAAS,KAAMC,UAAW,MAAtC,eAChBoB,GAAOE,QAAQC,IAAIH,GAChB9C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACJW,EAAKG,SAASC,IAAI,SAACxC,GAAD,OACjBX,EAAAC,EAAAC,cAACkD,EAAD,CAAYC,IAAK1C,EAAOC,cAAeD,OAAQA,kBAf1C2C,gDCTjBtE,QAAYC,GAAW,CAC3BsE,KAAM,CACJC,MAAO,KAETC,OAAQ,CACNzB,QAAS,eACT0B,OAAQ,QACRC,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHzE,aAAc,MAgCH0E,EA5BE,SAACjE,GAChB,IAAMW,EAAUzB,IADUgF,EAEwClE,EAAMiD,KAAjEnC,EAFmBoD,EAEnBpD,cAAeG,EAFIiD,EAEJjD,eAAgBD,EAFZkD,EAEYlD,kBAAmBmD,EAF/BD,EAE+BC,MACzD,OACEjE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMjD,UAAWR,EAAQ8C,KAAMpC,UAAW,GACxCnB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYM,MAAM,gBAAgBsC,cAAY,GAA9C,aACatD,GAEbd,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAK0C,cAAY,GAApD,kBAGApE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYM,MAAM,iBAAlB,WACWf,EAAiB,UAAW,UAEvCf,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAtC,kBACkBd,IAGpBZ,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACErE,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAQyC,KAAK,QAAQC,KAAMN,EAAMO,aAAcC,OAAQ,SAAUC,IAAK,YAAtE,ghBCxCV,IAAMC,EAAerC,IAAHsC,KAkDHC,EA9BA,SAAC/E,GACd,IAAMc,EAAgBkE,SAAShF,EAAMiF,MAAMC,OAAOpE,eAClD,OACEZ,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAOC,MAAOgC,EAAcM,UAAW,CAACrE,kBAEpC,SAAAgC,GAA4B,IAA1BC,EAA0BD,EAA1BC,QAASC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,KAChB,GAAIF,EAAS,OAAO7C,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,QAAS,KAAMC,UAAW,MAAtC,cAChBoB,GAAOE,QAAQC,IAAIH,GAFG,IAAAoC,EAUtBnC,EAAKpC,OANPC,EAJwBsE,EAIxBtE,cACAC,EALwBqE,EAKxBrE,aACAsE,EANwBD,EAMxBC,YACArE,EAPwBoE,EAOxBpE,kBACAC,EARwBmE,EAQxBnE,eACAkD,EATwBiB,EASxBjB,MAEF,OACEjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACEpC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,QAAS,KAAMC,UAAW,KAAM0C,cAAY,GACrDvD,GAEHb,EAAAC,EAAAC,cAACkF,EAAD,CAAUrC,KAAM,CAACnC,gBAAeC,eAAcsE,cAAapE,iBAAgBD,oBAAmBmD,eClCtGoB,EAAS,IAAIC,IAAa,CAC9BC,IAAK,aAGDrG,EAAQsG,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAW,MAEnBC,KAAM,UAIJ7G,EAAYC,YAAW,SAACC,GAC5B,MAAO,CACL4G,KAAM,CACJC,WAAY,SACZ/D,QAAS,OACTgE,cAAe,SACf3G,aAAcH,EAAMI,QAAQ,GAC5B2G,WAAY,OACZC,YAAa,OACbC,UAAWjH,EAAMI,QAAQ,GACzBkE,MAAO,WA2BE4C,MAtBf,WAEE,IAAM3F,EAAUzB,IAEhB,OACEgB,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAkBnH,MAAOA,GACvBc,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAgB2C,OAAQA,GACtBrF,EAAAC,EAAAC,cAACF,EAAAC,EAAMmC,SAAP,KACEpC,EAAAC,EAAAC,cAACoG,EAAA,EAAD,MACAtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,KACEvG,EAAAC,EAAAC,cAAA,OAAKsG,IAAKV,IAAMW,IAAK,cAAexF,UAAWR,EAAQqF,OACvD9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,IAAKlF,UAAWc,IACnCxC,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,yBAA0BlF,UAAWmD,UC1ClDgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjC,MACvB,2DCZNkC,IAASC,OAAOlH,EAAAC,EAAAC,cAACiH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.196fe619.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Paper} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Moment from \"react-moment\";\nimport {Link as RouterLink} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    borderBottom: '2px solid transparent',\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2)\n  },\n  failed: {\n    borderColor: 'red'\n  },\n  success: {\n    borderColor: 'green'\n  }\n}));\n\nconst CollisionLink = React.forwardRef((props, ref) => (\n  <RouterLink innerRef={ref} to=\"/getting-started/installation/\" {...props} />\n));\n\nconst LaunchItem = (props) => {\n  const classes = useStyles();\n  const {flight_number, mission_name, launch_date_local, launch_success} = props.launch;\n\n  return (\n    <Paper className={`${classes.paper} ${launch_success && classes.success} ${!launch_success && classes.failed}`} elevation={3}>\n      <Grid container>\n        <Grid item xs={9}>\n          <Typography variant=\"h5\" component=\"h6\">\n            {mission_name}\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\">\n            <Moment format={'YYYY-MM-DD HH:mm'}>\n              {launch_date_local}\n            </Moment>\n          </Typography>\n          <Typography variant=\"body1\" component=\"span\">\n            Flight Number: {flight_number}\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Button color={'primary'} component={CollisionLink} to={`/launch/${flight_number}`}>\n            Open Launch\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default LaunchItem;\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  detailInfo: {\n    display: 'inline-block',\n    padding: '3px 10px',\n    verticalAlign: 'middle'\n  },\n  success: {\n    backgroundColor: 'green'\n  },\n  failed: {\n    backgroundColor: 'red'\n  }\n}));\n\nconst MissionKey = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <p>\n        <span className={`${classes.detailInfo} ${classes.success}`}/> SUCCESS\n      </p>\n      <p>\n        <span className={`${classes.detailInfo} ${classes.failed}`}/> FAIL\n      </p>\n    </>\n  );\n};\n\nexport default MissionKey;\n","import React, {Component} from 'react';\nimport gql from 'graphql-tag';\nimport {Query} from \"react-apollo\";\nimport {Typography} from \"@material-ui/core\";\nimport LaunchItem from \"./LaunchItem\";\nimport MissionKey from \"./MissionKey\";\n\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }`;\n\nclass Launches extends Component {\n  render() {\n    return (\n      <div>\n        <Typography variant={'h3'} component={'h3'}>\n          Past Launches\n        </Typography>\n        <MissionKey />\n        <Query query={LAUNCHES_QUERY}>\n          {\n            ({loading, error, data}) => {\n              if (loading) return <Typography variant={'h4'} component={'h4'}>Loading...</Typography>;\n              if (error) console.log(error);\n              return <>\n                {data.launches.map((launch) => (\n                  <LaunchItem key={launch.flight_number} launch={launch}/>\n                ))}\n              </>\n            }\n          }\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default Launches;","import React from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n  card: {\n    width: 400,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst TechInfo = (props) => {\n  const classes = useStyles();\n  const {flight_number, launch_success, launch_date_local, links} = props.data;\n  return (\n    <div>\n      <Card className={classes.card} elevation={2}>\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n            Launched: {launch_date_local}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n            Technical Data\n          </Typography>\n          <Typography color=\"textSecondary\">\n            Launch: {launch_success ? 'SUCCESS': 'FAILED'}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Flight Number: {flight_number}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" href={links.article_link} target={'_blank'} rel={'noopener'}>Learn More</Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\n\nexport default TechInfo;\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport {Query} from \"react-apollo\";\nimport {Typography} from \"@material-ui/core\";\nimport TechInfo from \"./TechInfo\";\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_date_local\n            launch_success\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n            links {\n                article_link\n            }\n        }\n    }\n`;\n\nconst Launch = (props) => {\n  const flight_number = parseInt(props.match.params.flight_number);\n  return (\n    <Query query={LAUNCH_QUERY} variables={{flight_number}}>\n      {\n        ({loading, error, data}) => {\n          if (loading) return <Typography variant={'h4'} component={'h4'}>Loading...</Typography>;\n          if (error) console.log(error);\n          const {\n            flight_number,\n            mission_name,\n            launch_year,\n            launch_date_local,\n            launch_success,\n            links\n          } = data.launch;\n          return (\n            <>\n              <Typography variant={'h4'} component={'h1'} gutterBottom>\n                {mission_name}\n              </Typography>\n              <TechInfo data={{flight_number, mission_name, launch_year, launch_success, launch_date_local, links}}/>\n            </>\n          )\n        }\n      }\n    </Query>\n  );\n};\n\nexport default Launch;\n","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from \"react-apollo\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport logo from './assets/images/spacex-logo-black-and-white.png'\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from \"@material-ui/core/Container\";\nimport {deepOrange} from '@material-ui/core/colors'\nimport {makeStyles} from '@material-ui/core/styles';\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepOrange[400]\n    },\n    type: 'dark'\n  }\n});\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    logo: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      marginBottom: theme.spacing(4),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: theme.spacing(8),\n      width: '100%'\n    }\n  }\n});\n\nfunction App() {\n\n  const classes = useStyles();\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <React.Fragment>\n          <CssBaseline/>\n          <Container>\n            <img src={logo} alt={'SpaceX Logo'} className={classes.logo} />\n            <BrowserRouter>\n              <Route exact path={'/'} component={Launches}/>\n              <Route exact path={'/launch/:flight_number'} component={Launch}/>\n            </BrowserRouter>\n          </Container>\n        </React.Fragment>\n      </ApolloProvider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/spacex-logo-black-and-white.f751c040.png\";"],"sourceRoot":""}